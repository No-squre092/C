#include <stdio.h>
#include <stdlib.h>

int main() {
    FILE *filePtr;
    char fileName[50], ch;
    char data[100];
    
    // 1. Create and write to a file
    printf("Enter the filename to create: ");
    scanf("%s", fileName);
    
    // Open file in write mode
    filePtr = fopen(fileName, "w");
    
    if (filePtr == NULL) {
        printf("Error creating file!\n");
        exit(1);
    }
    
    printf("Enter data to write to file (press enter then ctrl+d to stop):\n");
    // Clear input buffer
    while ((getchar()) != '\n');
    // Read multiline input until EOF (ctrl+d)
    while (fgets(data, sizeof(data), stdin) != NULL) {
        fputs(data, filePtr);
    }
    
    fclose(filePtr);
    printf("Data written successfully.\n\n");
    
    // 2. Read from the file
    printf("Reading file contents:\n");
    filePtr = fopen(fileName, "r");
    
    if (filePtr == NULL) {
        printf("Error opening file for reading!\n");
        exit(1);
    }
    
    while ((ch = fgetc(filePtr)) != EOF) {
        printf("%c", ch);
    }
    
    fclose(filePtr);
    printf("\n\n");
    
    // 3. Append to the file
    printf("Appending more data to file...\n");
    filePtr = fopen(fileName, "a");
    
    if (filePtr == NULL) {
        printf("Error opening file for appending!\n");
        exit(1);
    }
    
    fprintf(filePtr, "\nThis is appended text.\n");
    fclose(filePtr);
    printf("Data appended successfully.\n\n");
    
    // 4. Read again to show appended content
    printf("Updated file contents:\n");
    filePtr = fopen(fileName, "r");
    
    while ((ch = fgetc(filePtr)) != EOF) {
        printf("%c", ch);
    }
    
    fclose(filePtr);
    
    // 5. Binary file operations (writing and reading structures)
    printf("\n\nBinary file operations example:\n");
    
    typedef struct {
        int id;
        char name[30];
        float salary;
    } Employee;
    
    Employee emp = {1, "John Doe", 5000.50};
    Employee readEmp;
    
    filePtr = fopen("employee.dat", "wb+");
    if (filePtr == NULL) {
        printf("Error creating binary file!\n");
        exit(1);
    }
    
    // Write structure to file
    fwrite(&emp, sizeof(Employee), 1, filePtr);
    printf("Employee record written to binary file.\n");
    
    // Move pointer to beginning
    rewind(filePtr);
    
    // Read structure from file
    fread(&readEmp, sizeof(Employee), 1, filePtr);
    printf("\nReading employee record:\n");
    printf("ID: %d\nName: %s\nSalary: %.2f\n", 
           readEmp.id, readEmp.name, readEmp.salary);
    
    fclose(filePtr);
    
    return 0;
}
